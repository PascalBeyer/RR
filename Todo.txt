Make a good general purpose allocator // done?
reenable shadow mapping // done?
do a good StoF, so that we have a better mesh. // done ? (at least for now)
make the meshstruct work like it does in soko? having a vertex pool, an index pool and then have list {start index, amount, materialIndex}? // yes!, and now they do.
Make own mesh format and material format, that respects how the game wants to think of them // done ?
do tileMap editor // done?
somehow the colors of that consoleTextField got mixed up.... it seems that r and b are switched, why no where else? // done?
Make everything an entity, like they have in Sokoban? // no.
Maybe make a catalog system, which looks at whats there on startup // done?
Move to front Asset system? // done?
Make meshes assets again. // done?
grid positions and offsets // done?
move the main render loop into each state. // done?
linear array of events waiting for results, i.e. spawned bock, waiting for put into goal. // done?
do actual level in path creator, and just render the "Level" (constant, that we load from) // done?
progress bar // done?
detect whether or not a in the path creator suggested move is possible. // done?
escape to close console. // done?
we could do it so you can pass in NULL instead of exe, so the path creator does not need to know. // done?
FIX EDITOR PASTE + MAKE EDITOR ARROW KEYS BE DEPENDEndent on cam direction. // done?
sting allinement in FormatString. // done?
add Blocks needed to level //done
add starting cam pos to level // done?
We need to handle dt of more then one cycle at some point // done?
We could go from a "tileMap" system to a "traversables" system? // kinda done, we check support
remove entity serials ? // wwhat no!
we could just make that be the switch. // done, in the setup.
let the user specify the granuality at which he wants to switch the setup. // done?

Asset:
Newly added assets should go into the asset system, not sure how. // done?
Asset system has to handle materials. // no, well maybe
Get PNG loader
make font into asset, would also make the draw String call way better, also solves the problem where I do not currently know where it is supposed to be stored

Tweekers:
make tweek search the file, if no loaded tweeker variable is found. maybe write out the tweekerfile instead of writing out all tweeker values.
make tweeker work based on filenames as well I.e. tweek editor meshSelectColor instead of having to use editorMeshSelectColor
maybe load all tweekers on startup?

MISC:
reduce api calls in opengl // done?
associating data to triangles, to open gl... like normals.
render strings leftbound
add lightPos to the level

make debug Ui for amount of memory used.


EDITOR : 
save (crtl-s) //done?
camera for tilemap editor //done ?
make us able to shift click to remove, if already in selection // done?
multi select // done?
copy paste // done?
undo, redo, // done?
paste of rows // done ?
make the cancel work off of the undo system, once it is in place // no, undo relies on this
double click = 'numpad .'
box select
make the orbiting more of a always usable flag, maybe just a bool.
how do you bright up colors? (brightness/ negative colors?)
Euler thing

UndoRedo has error with scale pushing one even if nothing selected


Execute:
rotations // will do if animations
interpolation // done?
undoing path // done?
win // done?
maybe simulate to x while making path for x (in alpha?) // done?
UI stuff // done?
falling // done?
dying  // should this exist ? // insome sense done?
render numbers in path //done ?
clear, and let cubes fall, that go of the stage. // done?
QuatTree for Entity phisical stuff? // done?
carrying does not work, as its kind of a hack. // done?
stones jump to interpolation offset, and somehow look really ugly... // done?
units should stop in pathcreator mode, maybe I should not check for collision, and just let eveything go to shit in the execute. that sounds fun // done?
do we have initiative? does stuff bump into each other and then back? I like that, that should look really "errory / errorish / ???" // done?
probably make the tree update based on create / restore / delete calls // done?
XForm states : GetFromMatrix in jBlow: Animation Playback part 2 37 min. // done?
reset frame arena after preload? // done?
clear flags in the begining, but do the sim at the end? // done?
make stuff save InterpolationData // done?
shift click for multi walk / control for unit select // done? does not feel that good
Undo data for game, so we can play in both directions, maybe the events are enought? // no, done.
undo does not really have to be a thing, if I do a Least commom multiple system.
speed meter
redo lighting, kd-tree for AABB's? make it just 4 u16 per triangle and work with the old system?
get rid of meshes having color? lighting should go into a seperate buffer that stores those colors
victory currupts position right now, if we are too fast.

upscale bmps
string.h memcpy

teleporters, moving platforms, ramps?
blocks on dudes? maybe only on blocks?, but what should be the fail? kill the guy?

make _unit_ into active entity and gather infos about the stones and maybe platforms and such, 
so we can actually generate the _production cycle_ and proof throughput and latency

Level idears
2 guys, stone.
halving the path (path that one guy has to do half of no space to manouver)
pushable maze (one stone in a maze, can push from the outside)
stone ride. get up a stone and a guy, then ride em around
Bridge with dudes,
Bridge with blocks, that fall down.

what should happen?
guy _waits_ on a thing that moves									-> guy stays on the thing
guy _waits_ on a thing and gets pushed into a wall that is one up	-> guy maintains his position and maybe falls
guy _moves_ from a moving thing										-> motion should be absolute.
stack of falling things												-> things should fall together
guy _moves_ from a falling thing									-> guy should move as if the thing was stationary
guy _moves_ from a falling thing with something on his head			-> the thing on his head should get carried

stacks all moving in the same direction should be fast?
pushing a stone while being moved?									-> motion should be absolute

tried relative motion, it feels really weird, and everything is really _special casey_

-> things can only move, if they are supported

splitt how editor and game works.

check sim loop for DF array could be replaced by a static build.

lets try to make a game where you go through tripyness = 4th dimension

make World -> EntityManager?

Animation:
Loading and saving skeletons // done ? 
Loading and saving animations // done?
make animations assets. // done?
OpenGL stuff, i.e rendering it on the hardware // done?
how to handle setup.projection, it seems it will _always_ be the same, but either orthogonal or projective...  // done?
Animation player (save in skeleton?, save in world?)

animationInfo in assethandler

figure out how to let buffers of differant multisample counts interact.

figure out a way to detect changes to the render setup, so we can reduce API calls.

ctime

make levels assets, do weight averageing in the loading.
I feel like skeletons and meshes should be parralel. And so should bones and bone names

check that convertNewAssets is not leaking
maybe rendersetup should have the shader...., because I have to repeat myself alot right now in opengl
make a DynamicFlags entry in the Entity flags enum, which is just all of them or ed together
direction keys do not record undos right now.

look at tempoary memory system.